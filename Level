import java.awt.BorderLayout;
import java.awt.Color;
import java.awt.Graphics;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.awt.event.KeyEvent;
import java.awt.event.KeyListener;

import javax.swing.JComponent;
import javax.swing.JFrame;
import javax.swing.Timer;

public class Level extends JComponent implements KeyListener{
	protected Timer timer;
	protected Paddle paddle;
	protected GameTimer gameTimer;
	protected Ball ball;
	protected int lives;
	protected boolean isAlive=true;

	public Level(int diff) {
		int length=(int) (300*Math.pow(0.5, diff-1));
		if(length<20)
			length=20;
		paddle=new Paddle(length);
		ball=new Ball(length);
		ball.setpaddleLengthInBall(paddle.getLength());
		this.addKeyListener(this);
		setFocusable(true);
		gameTimer=new GameTimer(1500);
		lives=3;
	}
	
	@Override
	public void keyPressed(KeyEvent arg0) {
		switch(arg0.getKeyCode()) {
		case 39://right arrow
			if(paddle.getPaddleX()<800-100)
			paddle.setPaddleX(30);
			break;
		case 37://left arrow
			if(paddle.getPaddleX()>0)
			paddle.setPaddleX(-30);
			break;
		default:
			//Ignore
		}
		ball.setPaddleXInBall(paddle.getPaddleX());
	}
	
	@Override
	public void keyReleased(KeyEvent arg0) {}
	@Override
	public void keyTyped(KeyEvent arg0) {}
}
