import java.awt.BorderLayout;
import java.awt.Color;
import java.awt.Graphics;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.awt.event.KeyEvent;
import java.awt.event.KeyListener;

import javax.swing.JComponent;
import javax.swing.JFrame;
import javax.swing.Timer;

public class Level extends JComponent implements KeyListener{
	protected Timer timer;
	protected Paddle paddle=new Paddle();
	protected GameTimer gameTimer;
	protected Ball ball;


	public Level() {
		setLayout(new BorderLayout());
		this.addKeyListener(this);
		setFocusable(true);
		gameTimer=new GameTimer(3000);
		ball=new Ball();
		timer=new Timer(1,new TimerCallback());
		timer.start();
	}

	
	protected class TimerCallback implements ActionListener{
			@Override
		public void actionPerformed(ActionEvent arg0) {
				gameTimer.incrementTime();
				if (!gameTimer.incrementTime()) 
					System.out.println("Game over!");
				
				ball.nextMove();
				
				repaint();
		}}

	public void paintComponent(Graphics g) {
		g.fillOval(ball.getX(),800-ball.gety(), 20, 20);
		g.fillRect(paddle.getPaddleX(), 600, 100, 10);
		gameTimer.drawTimer(g);
	}
	
	@Override
	public void keyPressed(KeyEvent arg0) {
		System.out.println(arg0.getKeyCode());
		switch(arg0.getKeyCode()) {
		case 39://right arrow
			if(paddle.getPaddleX()<800-100)
			paddle.setPaddleX(20);
			break;
		case 37://left arrow
			if(paddle.getPaddleX()>0)
			paddle.setPaddleX(-20);
			break;
		default:
			//Ignore
		}
		ball.setPaddleXInBall(paddle.getPaddleX());
	}

	@Override
	public void keyReleased(KeyEvent arg0) {}
	@Override
	public void keyTyped(KeyEvent arg0) {}
}
